syntax = "proto3";

package transit.events;

import "third_party/gtfs/gtfs-realtime.proto";  // Import the official GTFS proto
import "google/protobuf/timestamp.proto";
option go_package = "github.com/fjlanasa/tpm-go/api/v1/events";

message FeedMessageEvent {
  string agency_id = 1;
  transit_realtime.FeedMessage feed_message = 2;
}

message FeedMessageEventCollection {
  repeated FeedMessageEvent feed_message_events = 1;
}

enum StopStatus {
  UNKNOWN = 0;
  INCOMING_AT = 1;
  STOPPED_AT = 2;
  IN_TRANSIT_TO = 3;
}

message EventAttributes {
  string agency_id = 1;
  string vehicle_id = 2;
  string route_id = 3;
  string stop_id = 4;
  string origin_stop_id = 5;
  string destination_stop_id = 6;
  string direction_id = 7;
  string direction = 8;
  string direction_destination = 9;
  string parent_station = 10;
  int32 stop_sequence = 11;
  StopStatus stop_status = 12;
  string trip_id = 13;
  string service_date = 15;
  google.protobuf.Timestamp timestamp = 16;
}

message VehiclePositionEvent {
  EventAttributes attributes = 1;
  double latitude = 2;
  double longitude = 3;
}

message VehiclePositionEventCollection {
  repeated VehiclePositionEvent vehicle_position_events = 1;
}

message StopEvent {
  EventAttributes attributes = 1;
  // Event type
  enum EventType {
    UNKNOWN = 0;
    ARRIVAL = 1;
    DEPARTURE = 2;
  }
  EventType stop_event_type = 14;
}

message StopEventCollection {
  repeated StopEvent stop_events = 1;
}

message DwellTimeEvent {
  EventAttributes attributes = 1;
  google.protobuf.Timestamp arrival_time = 2;
  google.protobuf.Timestamp departure_time = 3;
  int32 dwell_time_seconds = 4;
}

message DwellTimeEventCollection {
  repeated DwellTimeEvent dwell_time_events = 1;
}

message TravelTimeEvent {
  EventAttributes attributes = 1;
  google.protobuf.Timestamp start_time = 2;
  google.protobuf.Timestamp end_time = 3;
  int32 travel_time_seconds = 4;
}

message TravelTimeEventCollection {
  repeated TravelTimeEvent travel_time_events = 1;
}

message HeadwayTimeEvent {
  EventAttributes attributes = 1;
  
  // Vehicle info
  string leading_vehicle_id = 2;
  string following_vehicle_id = 3;
  
  // Times
  int32 headway_seconds = 4;
} 

message HeadwayTimeEventCollection {
  repeated HeadwayTimeEvent headway_time_events = 1;
}
